// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ProjectStatus {
  Live
  Building
}

enum TaskStatus {
  Pending
  Review
  Completed
}

model Users {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String  @unique
  password   String
  isVerified Boolean @default(false)

  Otp      Otp?
  projects Projects[]

  createdAt DateTime @default(now())
  updaedtAt DateTime @updatedAt
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  otp       Int
  expiresIn DateTime

  userEmail String @unique
  user      Users  @relation(references: [email], fields: [userEmail], onDelete: Cascade)

  createdAt DateTime @default(now())
}

model Projects {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  status      ProjectStatus

  userEmail String
  user      Users  @relation(references: [email], fields: [userEmail], onDelete: Cascade)

  tasks Tasks[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tasks {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  startDate   String
  endDate     String
  status      TaskStatus

  projectId String   @db.ObjectId
  Projects  Projects @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
